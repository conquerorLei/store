<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace 属性：用于指定当前映射文件和那个接口进行映射，需要指定接口的问文件路径，需要标注包的完整路径接口-->
<mapper namespace="com.lxl.store.mapper.UserMapper">
    <!-- 自定义映射规则：resultMap标签来完成映射规则的定义 -->
    <!--
        id属性：标签给这个映射负责分配一个唯一的id值，对应的就是resultMap="id属性的值"属性的取值
        type属性：取值是一个类，具体表示的是数据库的查询结果与java的哪一个实体类进行结果集的映射
    -->
    <resultMap id="UserEntityMap" type="com.lxl.store.entity.User">
        <!--属性名称和表中字段名名称不一致的进行映射，相同的省略不写-->
        <!--
            column属性：数据库中的列的字段名
            property属性：实体类中的属性的字段名
        -->
        <!--在定义映射规则时，无论如何主键映射都不可以省略-->
        <result column="uid" property="uid"/>
        <result column="is_delete" property="isDelete"/>
        <result column="created_user" property="createdUser"/>
        <result column="created_time" property="createdTime"/>
        <result column="modified_user" property="modifiedUser"/>
        <result column="modified_time" property="modifiedTime"/>
    </resultMap>
    <!--id属性：表示映射的接口中的方法的名称，直接在标签的内容的内容来编写SQL语句-->
    <!--
        useGeneratedKeys属性：表示开启某个字段的值递增（主键设置为递增）
        keyProperty属性：标签将表中的那个字段作为主键进行递增
    -->
    <insert id="insert" useGeneratedKeys="true" keyProperty="uid">
        INSERT INTO t_user (
            username, password, salt, phone, email, gender, avatar, is_delete,
            created_user, created_time, modified_user, modified_time
        ) VALUES (
             #{username}, #{password}, #{salt}, #{phone}, #{email}, #{gender}, #{avatar}, #{isDelete},
             #{createdUser}, #{createdTime}, #{modifiedUser}, #{modifiedTime}
        )
    </insert>
    <!--select语句执行的结果是一个对象，多个对象-->
    <!--
        resultType:表示的查询的结果集的类型，并且包含实体类完整的包名（表字段和属性字段相同的时候）
        resultMap:表的字段和实体类的属性字段不相同的时候
    -->
    <select id="findByUsername" resultMap="UserEntityMap">
        SELECT * FROM t_user WHERE username = #{username}
    </select>
    <update id="updatePasswordByUid">
        update t_user
        set password = #{password},
            modified_user = #{modifiedUser},
            modified_time = #{modifiedTime}
        where uid = #{uid}
    </update>
    <select id="findByUid" resultMap="UserEntityMap">
        select * from t_user where uid = #{uid}
    </select>
    <update id="updateInfoByUid" parameterType="com.lxl.store.entity.User">
        update t_user
        set
        <if test="phone != null">phone = #{phone},</if>
        <if test="email != null">email = #{email},</if>
        <if test="gender != null">gender = #{gender},</if>
            modified_user = #{modifiedUser},
            modified_time = #{modifiedTime}
        where uid = #{uid}
    </update>
    <update id="updateAvatarByUid">
        update t_user
        set
        <if test="avatar != null">avatar = #{avatar},</if>
            modified_user = #{modifiedUser},
            modified_time = #{modifiedTime}
        where uid = #{uid}
    </update>
</mapper>
